{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","className","style","backgroundColor","mode","color","id","type","Navbar","to","title","about","onClick","toogleMode","htmlFor","TextForm","useState","text","setCount","heading","value","placeholder","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","copyText","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","filter","element","toFixed","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","setAlert","message","setTimeout","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.65aca488.chunk.js","sourcesContent":["export default function About(props) {\r\n\r\n    // const [myStyle, setMyStyle] = useState({\r\n    //     color: 'black',\r\n    //     backgroundColor: 'white',\r\n    //     border: '1px solid white',\r\n    // });\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{ backgroundColor: props.mode === 'dark' ? '#212538' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }} >\r\n\r\n                <div className=\"container\">\r\n                    <h1 className=\"mb-2 pb-4 pt-4\">About Us</h1>\r\n                    <div className=\"accordion\" id=\"accordionExample\" style={{ backgroundColor: props.mode === 'dark' ? 'rgb(43 68 86)' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                        <div className=\"accordion-item\">\r\n                            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                                <button className=\"accordion-button\" style={{ backgroundColor: props.mode === 'dark' ? 'rgb(43 68 86)' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                                    <strong>Analyze your text</strong>\r\n                                </button>\r\n                            </h2>\r\n                            <div id=\"collapseOne\" style={{ backgroundColor: props.mode === 'dark' ? 'rgb(43 68 86)' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }} className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                                <div className=\"accordion-body\">\r\n                                    <strong>TextUtils</strong> gives you a way to analyze your quickly and efficiently. Be it word count, character count.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"accordion-item\" >\r\n                            <h2 className=\"accordion-header\" id=\"headingTwo\" >\r\n                                <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={{ backgroundColor: props.mode === 'dark' ? 'rgb(43 68 86)' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                                    <strong>Free to use</strong>\r\n                                </button>\r\n                            </h2>\r\n                            <div id=\"collapseTwo\" style={{ backgroundColor: props.mode === 'dark' ? 'rgb(43 68 86)' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }} className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                                <div className=\"accordion-body\">\r\n                                    <strong>TextUtils</strong> is a free character counter tool that provides instant character count & word count statictis for a given text. TextUtils reports the number of words and characters. Thus it is suitable for writing text with word/character limit.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"accordion-item\">\r\n                            <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                                <button className=\"accordion-button collapsed\" style={{ backgroundColor: props.mode === 'dark' ? 'rgb(43 68 86)' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                                    <strong>Brwoser Compatible</strong>\r\n                                </button>\r\n                            </h2>\r\n                            <div id=\"collapseThree\" style={{ backgroundColor: props.mode === 'dark' ? 'rgb(43 68 86)' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }} className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                                <div className=\"accordion-body\">\r\n                                    This word counter software works in any web browsers such as chrome, safari, firefox, internet explorer, Opera. It suits to count characters in facebook, blog, books, excel document, pdf document, essays, etc.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import '../App.css';\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n                            </li>\r\n                        </ul>\r\n                        {/* <form className=\"d-flex\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n                        </form> */}\r\n\r\n\r\n                        <div className={`form-check form-switch text-${props.mode === 'light' ? 'd#212538ark' : 'light'}`}>\r\n                            <input className=\"form-check-input\" onClick={props.toogleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"><strong>Enable Dark Mode</strong></label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    about: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: \"Enter the Title\",\r\n    about: \"About Text here\"\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick = () => {\r\n        //console.log(\"Upper Case was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setCount(newText);\r\n        props.showAlert(\"Converted to Upper Case\", \"success\");\r\n    }\r\n\r\n    const handleLowClick = () => {\r\n        //console.log(\"Upper Case was clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setCount(newText);\r\n        props.showAlert(\"Converted to Lower Case\", \"success\");\r\n    }\r\n\r\n    const handleCopyClick = () => {\r\n        let copyText = document.getElementById(\"myBox\");\r\n        copyText.select();\r\n        navigator.clipboard.writeText(copyText.value);\r\n        document.getSelection().removeAllRanges();\r\n        props.showAlert(\"Text is Copied\", \"success\");\r\n    }\r\n\r\n    const handleClearClick = () => {\r\n        //console.log(\"Upper Case was clicked\" + text);\r\n        let newText = \"\";\r\n        setCount(newText);\r\n        props.showAlert(\"Text Box is Cleared\", \"success\");\r\n    }\r\n\r\n    const HandleOnChange = (event) => {\r\n        // console.log(\"On Change\");\r\n        setCount(event.target.value);\r\n    }\r\n\r\n\r\n    const [text, setCount] = useState(\"\");\r\n    // setCount(\"New text here\")\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <div className=\"mb-3\">\r\n                    <h3>{props.heading}</h3>\r\n                    <textarea className=\"form-control\" value={text} placeholder=\"Enter text here\" onChange={HandleOnChange} style={{ backgroundColor: props.mode === 'dark' ? '#212538' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-2 my-1\" onClick={handleUpClick}>Convert to Upper Case</button>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-2 my-1\" onClick={handleLowClick}>Convert to Lower Case</button>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-2 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-2 my-1\" onClick={handleCopyClick}>Copy Text</button>\r\n            </div>\r\n            <hr />\r\n            <div className=\"container my-2\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h1>Your text summary</h1>\r\n                <p>{text.split(\" \").filter((element) => { return element.length !== 0 }).length} words and {text.length} characters.</p>\r\n                <p>{((0.008 * text.split(\" \").length * 10) - (0.008 * 10)).toFixed(2)} Minutes read</p>\r\n                <h3>Preview</h3>\r\n                <p>{text.length > 0 ? text : \"Nothing to preview\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        <div style={{ height: '50px' }}>\r\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong><strong> : {props.alert.msg}</strong>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n\n  const toogleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#212538';\n      showAlert(\"Dark Mode is Enabled\", \"success\");\n      // document.title = \"TextUtils - Dark Mode\";\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode is Enabled\", 'success');\n      // document.title = \"TextUtils - Light Mode\";\n    }\n  }\n\n  return (\n    <>\n      <Router>\n        <Navbar title=\"TextUtils\" about=\"About Us\" mode={mode} toogleMode={toogleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Switch>\n            <Route exact path=\"/about\">\n              <About mode={mode} toogleMode={toogleMode} showAlert={showAlert} />\n            </Route>\n            <Route exact path=\"/\">\n              <TextForm heading=\"Enter the text to analyze below\" mode={mode} toogleMode={toogleMode} showAlert={showAlert} />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}